openapi: 3.0.2
info:
    title: The CRM Service API
    version: 1.0.0
    description: A brand new API with no content.  Go nuts!
paths:
    /v1/customer:
        get:
            responses:
                '200':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/CustomerList'
                    description: OK
            operationId: getCustomers
            summary: Get all customer
        post:
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/Customer'
                required: true
            responses:
                '200':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Customer'
                    description: OK
            operationId: createCustomer
            summary: Create a customer
    '/v1/customer/{id}':
        get:
            responses:
                '200':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Customer'
                    description: OK
            operationId: getCustomer
            summary: Get customer
        put:
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/Customer'
                required: true
            responses:
                '200':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Customer'
                    description: OK
            operationId: updateCustomer
            summary: Update customer
        delete:
            responses:
                '200':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Customer'
                    description: OK
            operationId: deleteCustomer
            summary: Delete customer
        parameters:
            -
                name: id
                description: Customer ID
                schema:
                    type: string
                in: path
                required: true
    /v1/user:
        get:
            responses:
                '200':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/UserList'
                    description: OK
            operationId: getUsers
            summary: Get users
        post:
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/User'
                required: true
            responses:
                '200':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/User'
                    description: OK
            operationId: createUser
            summary: Create user
    '/v1/user/{id}':
        get:
            responses:
                '200':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/User'
                    description: OK
            operationId: getUser
            summary: Get user
        put:
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/User'
                required: true
            responses:
                '200':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/User'
                    description: OK
            operationId: updateUser
            summary: Update user
        delete:
            responses:
                '200':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/User'
                    description: OK
            operationId: deleteUser
            summary: Delete user
        parameters:
            -
                name: id
                description: User ID
                schema:
                    type: string
                in: path
                required: true
components:
    schemas:
        CustomerList:
            title: Root Type for CustomerListDTO
            description: ''
            type: array
            items:
                $ref: '#/components/schemas/Customer'
            example:
                -
                    id: dummyId
                    name: dummyName
                    surname: dummySurname
                    lastUpdateBy: fakeUser
                    createdBy: fakeUser
        Customer:
            title: Root Type for CustomerDTO
            description: ''
            required:
                - name
                - surname
                - id
            type: object
            properties:
                id:
                    type: string
                name:
                    type: string
                surname:
                    type: string
                lastUpdateBy:
                    type: string
                createdBy:
                    type: string
            example:
                id: dummyId
                name: dummyName
                surname: dummySurname
                lastUpdateBy: fakeDate
                createdBy: fakeUser
        User:
            title: Root Type for User
            description: ''
            required:
                - id
                - isAdmin
            type: object
            properties:
                id:
                    type: string
                isAdmin:
                    type: boolean
            example:
                id: fakeId
                isAdmin: false
        UserList:
            title: Root Type for UserList
            description: ''
            type: array
            items:
                $ref: '#/components/schemas/User'
            example:
                -
                    id: fakeId
                    isAdmin: false
tags:
    -
        name: CRMApi
        description: ''
